{
	"info": {
		"_postman_id": "cb5a0612-5b4d-420a-a534-c21e88edc032",
		"name": "III Devops Test - QA",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13159247"
	},
	"item": [
		{
			"name": "QA",
			"item": [
				{
					"name": "AM登入",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"function jwt_decode(jwt) {",
									"    var parts = jwt.split('.'); // header, payload, signature",
									"    return JSON.parse(atob(parts[1]));",
									"}",
									"pm.test(\"JWT Token 檢查\", function () {",
									"    const decode_jwt = jwt_decode(pm.response.json().data.token);",
									"    pm.environment.set(\"token\", pm.response.json().data.token)",
									"    pm.environment.set(\"user_id\", decode_jwt.sub.user_id)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{am_username}}\",\n    \"password\": \"{{am_password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{test_origin}}/user/login",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "新增 QA 用戶",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"儲存新 user ID\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.user_id).to.be.a(\"number\");\r",
									"    pm.environment.set(\"am_create_qa_id\", pm.response.json().data.user_id)\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{am_create_qa_username}}\",\n    \"email\": \"{{am_create_qa_email}}\",\n    \"password\": \"{{am_create_qa_password}}\",\n    \"login\": \"{{am_create_qa_login}}\",\n    \"role_id\": 7\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{test_origin}}/user",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "取得QA用戶資訊",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"測試QA內容\", function () {",
									"    const qaUserInfo = pm.response.json();",
									"    pm.expect(qaUserInfo.data.id).to.eql(pm.environment.get(\"am_create_qa_id\"));",
									"    pm.expect(qaUserInfo.data.name).to.eql(pm.environment.get(\"am_create_qa_username\"));",
									"    pm.expect(qaUserInfo.data.default_role.id).to.eql(7)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{test_origin}}/user/{{am_create_qa_id}}",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"user",
								"{{am_create_qa_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "QA登入",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"function jwt_decode(jwt) {",
									"    var parts = jwt.split('.'); // header, payload, signature",
									"    return JSON.parse(atob(parts[1]));",
									"}",
									"pm.test(\"JWT Token 檢查\", function () {",
									"    const decode_jwt = jwt_decode(pm.response.json().data.token);",
									"    pm.environment.set(\"token_qa\", pm.response.json().data.token)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{am_create_qa_username}}\",\n    \"password\": \"{{am_create_qa_password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{test_origin}}/user/login",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "新增專案",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"儲存專案各項id\", function () {\r",
									"    const data = pm.response.json().data;\r",
									"    pm.environment.set(\"am_create_pj_id\", data.project_id)\r",
									"    console.log(pm.environment.get(\"am_create_pj_id\"))\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const now = new Date()\r",
									"now.setTime(now.getTime() + (8 * 60 * 60 * 1000)); // Shift to GMT+8\r",
									"const project_name = \"pmgen-\" + now.getTime()\r",
									"const desc = \"此為 Postman 測試腳本自動產生專案。序號：\" + now.getTime()\r",
									"const date = now.toISOString()\r",
									"const display = \"PMSC \" + date.slice(date.indexOf('-') + 1, date.indexOf('.') - 3).replace('T', ' ')\r",
									"pm.variables.set('am_create_pj_name', project_name)\r",
									"pm.variables.set('am_create_pj_descripiton', desc)\r",
									"pm.variables.set('am_create_pj_display', display)\r",
									"\r",
									"var year = now.getFullYear();\r",
									"var month = now.getMonth();\r",
									"var day = now.getDate();\r",
									"var c = new Date(year + 1, month, day);\r",
									"pm.variables.set('start_date',date)\r",
									"pm.variables.set('due_date',c.toISOString())\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{am_create_pj_name}}\",\n\t\"description\": \"{{am_create_pj_descripiton}}\",\n    \"display\": \"{{am_create_pj_display}}\",\n    \"start_date\": \"{{start_date}}\",\n    \"due_date\": \"{{due_date}}\",\n    \"disabled\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{test_origin}}/project",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "建立測試用議題",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"儲存議題 ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data).to.have.property('id');\r",
									"    pm.environment.set('am_create_issue_id',jsonData.data.id)\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "project_id",
									"value": "{{am_create_pj_id}}",
									"type": "text"
								},
								{
									"key": "tracker_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "status_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "priority_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "name",
									"value": "測試用議題",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{test_origin}}/issues",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"issues"
							]
						},
						"description": "只有 PM 和 Admin 可以新增議題，parent_id 若無可以不用放"
					},
					"response": []
				},
				{
					"name": "建立專案內成員",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"accept-encoding": true,
							"connection": true,
							"host": true,
							"user-agent": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_id\": \"{{am_create_qa_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{test_origin}}/project/{{am_create_pj_id}}/member",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"project",
								"{{am_create_pj_id}}",
								"member"
							]
						},
						"description": "/project/<project_id>/member"
					},
					"response": []
				},
				{
					"name": "QA 取得議題列表",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"測試QA能讀取專案議題\", function () {",
									"    let jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.issue_list[0].id).to.eql(pm.environment.get(\"am_create_issue_id\"));",
									"    pm.expect(jsonData.data.page.total).to.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_qa}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{test_origin}}/project/{{am_create_pj_id}}/issues?limit=5&offset=0",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"project",
								"{{am_create_pj_id}}",
								"issues"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "刪除議題",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{test_origin}}/issues/{{am_create_issue_id}}",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"issues",
								"{{am_create_issue_id}}"
							]
						},
						"description": "只有 PM 和 Admin 可以刪除議題。"
					},
					"response": []
				},
				{
					"name": "刪除QA用戶",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{test_origin}}/user/{{am_create_qa_id}}",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"user",
								"{{am_create_qa_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "刪除專案",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{test_origin}}/project/{{am_create_pj_id}}",
							"host": [
								"{{test_origin}}"
							],
							"path": [
								"project",
								"{{am_create_pj_id}}"
							]
						},
						"description": "只有 Admin 和在指定專案內的 PM 可以刪除專案"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"correctStatus = pm.variables.get('correctStatus') || 200",
					"pm.test(\"Status code 檢查\", () => {",
					"    pm.response.to.have.status(correctStatus);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "user_id",
			"value": ""
		}
	]
}