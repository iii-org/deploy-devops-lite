# THIS FILE IS EXTENDS BY docker-compose.${MODE}.yaml
x-logging:
  service: &default-logging
    logging:
      options:
        max-size: "10m"
        max-file: "3"

services:
  traefik:
    image: "traefik:v2.10"
    restart: always
    command:
      - "--api=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--providers.file.filename=/etc/traefik/dynamic.yaml"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "${DOCKER_SOCKET}:/var/run/docker.sock:ro"
      - "./ca:/ca:ro"
      - "./dynamic.yaml:/etc/traefik/dynamic.yaml:ro"

  api-base:
    image: iiiorg/devops-lite-api:ce-0.6.0
    restart: always
    volumes:
      - ${III_ENV}:/usr/src/app/env/HEAD.env
      - ${DOCKER_SOCKET}:/var/run/docker.sock
    # We don't share depends_on with other services, because it's docker limit
    environment:
      ADMIN_INIT_EMAIL: ${III_ADMIN_EMAIL}
      ADMIN_INIT_LOGIN: ${III_ADMIN_LOGIN}
      ADMIN_INIT_PASSWORD: ${III_ADMIN_PASSWORD}
      DEPLOYER_NODE_IP: ${IP_ADDR}
      GITLAB_ADMIN_ACCOUNT: root
      GITLAB_ADMIN_PASSWORD: ${GITLAB_ROOT_PASSWORD}
      GITLAB_BASE_URL: http://gitlab:${GITLAB_PORT}
      GITLAB_EXTERNAL_BASE_URL: ${GITLAB_URL}
      JSON_AS_ASCII: false
      REDIS_BASE_URL: redis:6379
      REDMINE_ADMIN_ACCOUNT: admin
      REDMINE_ADMIN_PASSWORD: ${REDMINE_DB_PASSWORD}
      REDMINE_EXTERNAL_BASE_URL: ${REDMINE_URL}
      REDMINE_INTERNAL_BASE_URL: http://redmine:3000
      SONARQUBE_EXTERNAL_BASE_URL: ${SQ_URL}
      SONARQUBE_INTERNAL_BASE_URL: http://sonarqube:9000/api
      SQLALCHEMY_ACCOUNT: postgres
      SQLALCHEMY_DATABASE: devopsdb
      SQLALCHEMY_HOST: iii-devops-lite-db:5432
      SQLALCHEMY_PASSWORD: ${III_DB_PASSWORD}
      SQLALCHEMY_TRACK_MODIFICATIONS: false
      WTF_CSRF_CHECK_DEFAULT: false

  gitlab:
    <<: *default-logging
    image: gitlab/gitlab-ce:13.12.15-ce.0
    container_name: "gitlab"
    restart: always
    volumes:
      - "gitlab-config:/etc/gitlab"
      - "gitlab-logs:/var/log/gitlab"
      - "gitlab-data:/var/opt/gitlab"
    healthcheck:
      disable: false

  runner:
    <<: *default-logging
    image: gitlab/gitlab-runner:alpine-v15.10.0
    container_name: "gitlab-runner"
    restart: always
    volumes:
      - runner-config:/etc/gitlab-runner
      - ${DOCKER_SOCKET}:/var/run/docker.sock
      - ${TEMPLATES_DIR}:/templates

  sonarqube-db:
    <<: *default-logging
    image: bitnami/postgresql:15
    container_name: "sonarqube-db"
    restart: always
    volumes:
      - sonarqube-data:/bitnami/postgresql
    environment:
      POSTGRESQL_USERNAME: postgres
      POSTGRESQL_PASSWORD: ${SQ_DB_PASSWORD}
      POSTGRESQL_DATABASE: sonarqube

  sonarqube:
    <<: *default-logging
    image: sonarqube:8.9.7-community
    container_name: "sonarqube"
    restart: always
    ports:
      - "${SQ_PORT}:9000"
    environment:
      SONARQUBE_JDBC_USERNAME: postgres
      SONARQUBE_JDBC_PASSWORD: ${SQ_DB_PASSWORD}
      SONARQUBE_JDBC_URL: jdbc:postgresql://sonarqube-db:5432/sonarqube

  redmine-db:
    <<: *default-logging
    image: postgres:12
    container_name: "redmine-db"
    restart: always
    volumes:
      - redmine-db-data:/var/lib/postgresql/data
      - ${REDMINE_SQL}:/tmp/redmine.sql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${REDMINE_DB_PASSWORD}
      POSTGRES_DB: redmine_database

  redmine:
    <<: *default-logging
    image: redmine:4.2.10
    container_name: "redmine"
    restart: always
    ports:
      - "${REDMINE_PORT}:3000"
    volumes:
      - ${REDMINE_CONF}:/usr/src/redmine/config/configuration.yml
      - redmine-files:/usr/src/redmine/files
    environment:
      REDMINE_DB_POSTGRES: redmine-db
      REDMINE_DB_PASSWORD: ${REDMINE_DB_PASSWORD}
      REDMINE_DB_DATABASE: redmine_database
      REDMINE_SECRET_KEY_BASE: ${REDMINE_DB_PASSWORD}

  redis:
    <<: *default-logging
    image: redis:6.2.11
    container_name: "redis"
    restart: always
    ports:
      - "31999:6379"
    volumes:
      - ${REDIS_CONF}:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf

  iii-devops-lite-db:
    <<: *default-logging
    image: postgres:12
    container_name: "iii-devops-lite-db"
    restart: always
    ports:
      - "${III_DB_PORT}:5432"
    volumes:
      - iii-devops-lite-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${III_DB_PASSWORD}
      POSTGRES_DB: postgres

    healthcheck:
      test: [ "CMD-SHELL", "bash -c 'pg_isready -U $$POSTGRES_USER'" ]
      interval: 10s
      timeout: 5s
      retries: 5

  iii-devops-lite-api:
    <<: *default-logging
    extends:
      service: api-base
    container_name: "iii-devops-lite-api"
    restart: on-failure
    ports:
      - "${III_PORT}:10009"
    volumes:
      - ${III_ENV}:/usr/src/app/env/HEAD.env
      - ${DOCKER_SOCKET}:/var/run/docker.sock
      - iii-devops-lite-file:/opt/nfs
      - iii-devops-lite-log:/logs

  iii-devops-lite-api-worker:
    <<: *default-logging
    extends:
      service: api-base
    container_name: "iii-devops-lite-api-worker"
    command: celery -A apis.api.celery worker -P eventlet --loglevel=INFO
    volumes:
      - ${III_ENV}:/usr/src/app/env/HEAD.env
      - ${DOCKER_SOCKET}:/var/run/docker.sock

  iii-devops-lite-api-beat:
    <<: *default-logging
    extends:
      service: api-base
    container_name: "iii-devops-lite-api-beat"
    command: celery -A apis.api.celery beat --loglevel=INFO --schedule=/tmp/celerybeat-schedule
    volumes:
      - ${III_ENV}:/usr/src/app/env/HEAD.env
      - ${DOCKER_SOCKET}:/var/run/docker.sock 

  iii-devops-lite-ui:
    <<: *default-logging
    image: iiiorg/devops-lite-ui:ce-0.6.0
    container_name: "iii-devops-lite-ui"
    restart: always
    environment:
      API_URL: http://iii-devops-lite-api:10009/
      API_WS_URL: http://iii-devops-lite-api:10009/
      CE_CUSTOM_TITLE: "III DevSecOps Community"
    healthcheck:
      test: curl --fail http://localhost/prod-api/swagger-ui/ || exit 1
      interval: 10s
      timeout: 1s
      retries: 5
