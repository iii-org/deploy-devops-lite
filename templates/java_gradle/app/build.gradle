/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.1/userguide/tutorial_java_projects.html
*/

buildscript {
    repositories {
    jcenter()
    mavenLocal()
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.29.3"

    }
}

plugins {
    // Apply the java plugin to add support for Java
    id 'java-library'

    // Apply the application plugin to add support for building a CLI application
    id 'application'
    id 'jacoco'
    id  "org.sonarqube" version "3.1.1"

}

group "org.example"
version '1.1'

apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'app.App'
        )
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}


task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    // mavenLocal(): deafult repo path : /User/.m2/repository
    // jcenter():    deafult repo path : /User/.gradle/caches/modules-2/files-2.1 

    /*
    maven {
       url = "http://10.20.205:8081/artifactory/gradle_repo"
       credentials{
            username = "admin"
            password = "password"
       }
    }
    */
    jcenter()
    mavenLocal()
}


dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.0-jre'

    // this is dependency from Artifactory( Jfrog)
    implementation group: 'org.example', name: 'app', version: '1.1'
    
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}



application {
    // Define the main class for the application
    mainClassName = 'app.App'
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/reports")
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
   // build.dependsOn jacocoTestReport
    reports {
        xml.enabled true
        xml.destination file("$buildDir/reports/jacoco.xml")

     }
}

/* 
artifactory {
    contextUrl = 'http://10.20.2.205:8081/artifactory/'
    publish {
        repository {
            repoKey = 'gradle_repo' // The Artifactory repository key to publish to
            username = "admin" // The publisher user name
            password = "password" // The publisher password
        }
        defaults {
            // Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publications('mavenJava', 'gradleJava')
            publishArtifacts = true
            // Properties to be attached to the published artifacts.
            properties = ['qa.level': 'basic', 'dev.team' : 'core']
            // Publish generated POM files to Artifactory (true by default)
            publishPom = true
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            //from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

*/
